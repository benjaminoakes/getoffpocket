#!/usr/bin/env ruby
require 'yaml'
require 'set'

# Paths to data files
data_files = [
  File.expand_path('../_data/product_example.yml', __dir__),  # Example dataset
  File.expand_path('../_data/products.yml', __dir__)          # Main products dataset
]

# Manual mapping of feature IDs to FontAwesome icons
ICON_MAP = {
  'advanced_labeling'              => 'fa-tag',
  'advanced_tagging'               => 'fa-tags',
  'ai_features'                    => 'fa-robot',
  'archiving'                      => 'fa-archive',
  'automatic_archiving'            => 'fa-sync-alt',
  'bookmarklet'                    => 'fa-bookmark',
  'browser_extension'             => 'fa-puzzle-piece',
  'browser_extensions'            => 'fa-puzzle-piece',
  'clean_reading_mode'             => 'fa-book-open',
  'collaboration'                  => 'fa-users',
  'comments'                       => 'fa-comments',
  'customizable_reading_experience'=> 'fa-sliders-h',
  'dark_mode'                      => 'fa-moon',
  'docker_deployment'              => 'fab fa-docker',
  'docker_support'                 => 'fab fa-docker',
  'export'                         => 'fa-file-export',
  'fast_interface'                 => 'fa-rocket',
  'fast_performance'               => 'fa-rocket',
  'folders'                        => 'fa-folder',
  'full_text_search'               => 'fa-search',
  'highlighting'                   => 'fa-highlighter',
  'icloud_sync'                    => 'fa-cloud',
  'import'                         => 'fa-file-import',
  'import_export'                  => 'fa-exchange-alt',
  'minimal_interface'              => 'fa-stream',
  'mobile_apps'                    => 'fa-mobile-alt',
  'mobile_friendly'                => 'fa-mobile-alt',
  'multiuser'                      => 'fa-users',
  'native_apps'                    => 'fa-desktop',
  'nested_collections'             => 'fa-layer-group',
  'newsletter_subscriptions'       => 'fa-newspaper',
  'notes'                          => 'fa-sticky-note',
  'offline'                        => 'fas fa-plane',
  'offline_reading'                => 'fas fa-book',
  'pdf_support'                    => 'fa-file-pdf',
  'privacy_focused'                => 'fa-shield-alt',
  'progress_tracking'              => 'fa-chart-line',
  'reading_analytics'              => 'fa-chart-bar',
  'reading_statistics'             => 'fa-chart-pie',
  'readwise_integration'           => 'fa-plug',
  'responsive_design'              => 'fa-sync-alt',
  'responsive_web_interface'       => 'fa-sync-alt',
  'search'                         => 'fa-search',
  'smart_folders'                  => 'fa-folder-open',
  'social_sharing'                 => 'fa-share-alt',
  'statistics'                     => 'fa-chart-pie',
  'tags'                           => 'fa-tags',
  'text_to_speech'                 => 'fa-volume-up',
  'typography'                     => 'fa-font',
  'typography_customization'       => 'fa-text-height',
  'visual_bookmarks'               => 'fa-bookmark',
  'visual_previews'                => 'fa-eye',
  'web_clipper'                    => 'fa-cut'
}

features = Set.new

data_files.each do |path|
  unless File.exist?(path)
    warn "Warning: #{path} not found"
    next
  end
  items = YAML.load_file(path)
  next unless items.is_a?(Array)
  items.each do |item|
    next unless item['features'].is_a?(Array)
    item['features'].each { |f| features.add(f) }
  end
end

# Build sorted feature entries
entries = features.to_a.sort.map do |fid|
  {
    'id'    => fid,
    'label' => fid.split('_').map(&:capitalize).join(' '),
    'icon'  => ICON_MAP.fetch(fid, 'fa-question-circle')
  }
end

# Write to features.yml
output_path = File.expand_path('../_data/features.yml', __dir__)
File.open(output_path, 'w') do |f|
  f.puts "# Auto-generated by scripts/generate_features.rb"
  entries.each do |e|
    f.puts "- id: #{e['id']}"
    f.puts "  label: #{e['label']}"
    f.puts "  icon: #{e['icon']}"
  end
end

puts "Generated #{entries.size} features to #{output_path}"
